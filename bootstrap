#! /bin/sh

# Call this without arguments if hopest is the toplevel package.
# Call this with two arguments if hopest is itself a subdirectory:
# ./bootstrap <sc config directory> <p4est config directory>

# RUNNING BOOTSTRAP FOR LIBSC

# override by option argument
SC_CONFIG="sc/config"
if test "x$1" != x ; then
  SC_CONFIG="$1"
fi
if test ! -d "$SC_CONFIG" ; then
  echo "Error: Cannot find directory $SC_CONFIG"
  echo "   If you just called ./bootstrap from a fresh clone of hopest,"
  echo "   you may need to checkout the submodules sc and p4est:"
  echo "   \$ git submodule init && git submodule update"
  exit 1
fi
# convert into an absolute path
SC_CONFIG=`cd "$SC_CONFIG" && pwd`

if test -x "sc/bootstrap" ; then
  echo "Running bootstrap in subdirectory sc"
  (cd sc && ./bootstrap)
fi

# RUNNING BOOTSTRAP FOR P4EST

#override by option argument
P4EST_CONFIG="p4est/config"
if test "x$2" != x ; then
  P4EST_CONFIG="$2"
fi
if test ! -d "$P4EST_CONFIG" ; then
  echo "Error: Cannot find directory $P4EST_CONFIG"
  echo "   If you just called ./bootstrap from a fresh clone of hopest,"
  echo "   you may need to checkout the submodules sc and p4est:"
  echo "   \$ git submodule init && git submodule update"
  exit 1
fi
#convert into an absolute path
P4EST_CONFIG=`cd "$P4EST_CONFIG" && pwd`

# RUNNING BOOTSTRAP FOR HDF5

#override by option argument
HDF5_VERSION=1.8.13
HDF5_CONFIG="hdf5-$HDF5_VERSION/config"
if test "x$2" != x ; then
  HDF5_CONFIG="$2"
fi
if test ! -d "$HDF5_CONFIG" ; then
  wget -N http://www.hdfgroup.org/ftp/HDF5/prev-releases/hdf5-$HDF5_VERSION/src/hdf5-$HDF5_VERSION.tar.bz2
  tar -xvjf hdf5-$HDF5_VERSION.tar.bz2 1>/dev/null && cd ..
  if test ! -d "$HDF5_CONFIG" ; then
    echo "Error: Cannot find directory $HDF5_CONFIG"
    echo "   If you just called ./bootstrap from a fresh clone of hopest,"
    echo "   you may need to checkout the submodules sc and HDF5:"
    echo "   \$ git submodule init && git submodule update"
    exit 1
  fi
fi
#convert into an absolute path
HDF5_CONFIG=`cd "$HDF5_CONFIG" && pwd`

if test -x "HDF5/bootstrap" ; then
  echo "Running bootstrap in subdirectory HDF5"
  (cd hdf5 && ./bootstrap "$SC_CONFIG")
fi

# RUNNING BOOTSTRAP FOR HOPEST

echo "--- This is the bootstrap script for hopest ---"
echo "Current directory is $PWD"

LIBTOOLIZE=`which glibtoolize`
if test ! -x "$LIBTOOLIZE" ; then LIBTOOLIZE=`which libtoolize` ; fi
if test ! -x "$LIBTOOLIZE" ; then echo "bootstrap requires libtoolize" ; \
   exit 1 ; fi

aclocal -Wall -I config -I "$SC_CONFIG" -I "$P4EST_CONFIG" -I "hdf5/config"
autoconf -Wall --force
autoheader -Wall --force
"$LIBTOOLIZE" --install --copy
automake -Wall --add-missing --copy
